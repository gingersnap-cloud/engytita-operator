// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NamespaceSelectorApplyConfiguration represents an declarative configuration of the NamespaceSelector type for use
// with apply.
type NamespaceSelectorApplyConfiguration struct {
	Any        *bool    `json:"any,omitempty"`
	MatchNames []string `json:"matchNames,omitempty"`
}

// NamespaceSelectorApplyConfiguration constructs an declarative configuration of the NamespaceSelector type for use with
// apply.
func NamespaceSelector() *NamespaceSelectorApplyConfiguration {
	return &NamespaceSelectorApplyConfiguration{}
}

// WithAny sets the Any field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Any field is set to the value of the last call.
func (b *NamespaceSelectorApplyConfiguration) WithAny(value bool) *NamespaceSelectorApplyConfiguration {
	b.Any = &value
	return b
}

// WithMatchNames adds the given value to the MatchNames field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the MatchNames field.
func (b *NamespaceSelectorApplyConfiguration) WithMatchNames(values ...string) *NamespaceSelectorApplyConfiguration {
	for i := range values {
		b.MatchNames = append(b.MatchNames, values[i])
	}
	return b
}
