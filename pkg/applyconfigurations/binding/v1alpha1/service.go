// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ServiceApplyConfiguration represents an declarative configuration of the Service type for use
// with apply.
type ServiceApplyConfiguration struct {
	NamespacedRefApplyConfiguration `json:",inline"`
	Id                              *string `json:"id,omitempty"`
}

// ServiceApplyConfiguration constructs an declarative configuration of the Service type for use with
// apply.
func Service() *ServiceApplyConfiguration {
	return &ServiceApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithGroup(value string) *ServiceApplyConfiguration {
	b.Group = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithVersion(value string) *ServiceApplyConfiguration {
	b.Version = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithKind(value string) *ServiceApplyConfiguration {
	b.Kind = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithResource(value string) *ServiceApplyConfiguration {
	b.Resource = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithName(value string) *ServiceApplyConfiguration {
	b.Name = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithNamespace(value string) *ServiceApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithId sets the Id field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Id field is set to the value of the last call.
func (b *ServiceApplyConfiguration) WithId(value string) *ServiceApplyConfiguration {
	b.Id = &value
	return b
}
