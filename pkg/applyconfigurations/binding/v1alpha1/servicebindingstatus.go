// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ServiceBindingStatusApplyConfiguration represents an declarative configuration of the ServiceBindingStatus type for use
// with apply.
type ServiceBindingStatusApplyConfiguration struct {
	Conditions []v1.Condition `json:"conditions,omitempty"`
	Secret     *string        `json:"secret,omitempty"`
}

// ServiceBindingStatusApplyConfiguration constructs an declarative configuration of the ServiceBindingStatus type for use with
// apply.
func ServiceBindingStatus() *ServiceBindingStatusApplyConfiguration {
	return &ServiceBindingStatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ServiceBindingStatusApplyConfiguration) WithConditions(values ...v1.Condition) *ServiceBindingStatusApplyConfiguration {
	for i := range values {
		b.Conditions = append(b.Conditions, values[i])
	}
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *ServiceBindingStatusApplyConfiguration) WithSecret(value string) *ServiceBindingStatusApplyConfiguration {
	b.Secret = &value
	return b
}
