// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ApplicationApplyConfiguration represents an declarative configuration of the Application type for use
// with apply.
type ApplicationApplyConfiguration struct {
	RefApplyConfiguration `json:",inline"`
	LabelSelector         *v1.LabelSelector              `json:"labelSelector,omitempty"`
	BindingPath           *BindingPathApplyConfiguration `json:"bindingPath,omitempty"`
}

// ApplicationApplyConfiguration constructs an declarative configuration of the Application type for use with
// apply.
func Application() *ApplicationApplyConfiguration {
	return &ApplicationApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *ApplicationApplyConfiguration) WithGroup(value string) *ApplicationApplyConfiguration {
	b.Group = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *ApplicationApplyConfiguration) WithVersion(value string) *ApplicationApplyConfiguration {
	b.Version = &value
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *ApplicationApplyConfiguration) WithKind(value string) *ApplicationApplyConfiguration {
	b.Kind = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *ApplicationApplyConfiguration) WithResource(value string) *ApplicationApplyConfiguration {
	b.Resource = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ApplicationApplyConfiguration) WithName(value string) *ApplicationApplyConfiguration {
	b.Name = &value
	return b
}

// WithLabelSelector sets the LabelSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LabelSelector field is set to the value of the last call.
func (b *ApplicationApplyConfiguration) WithLabelSelector(value v1.LabelSelector) *ApplicationApplyConfiguration {
	b.LabelSelector = &value
	return b
}

// WithBindingPath sets the BindingPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BindingPath field is set to the value of the last call.
func (b *ApplicationApplyConfiguration) WithBindingPath(value *BindingPathApplyConfiguration) *ApplicationApplyConfiguration {
	b.BindingPath = value
	return b
}
