// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gingersnap-project/operator/api/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// LazyCacheRuleConditionApplyConfiguration represents an declarative configuration of the LazyCacheRuleCondition type for use
// with apply.
type LazyCacheRuleConditionApplyConfiguration struct {
	Type    *v1alpha1.LazyCacheRuleConditionType `json:"type,omitempty"`
	Status  *v1.ConditionStatus                  `json:"status,omitempty"`
	Message *string                              `json:"message,omitempty"`
}

// LazyCacheRuleConditionApplyConfiguration constructs an declarative configuration of the LazyCacheRuleCondition type for use with
// apply.
func LazyCacheRuleCondition() *LazyCacheRuleConditionApplyConfiguration {
	return &LazyCacheRuleConditionApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *LazyCacheRuleConditionApplyConfiguration) WithType(value v1alpha1.LazyCacheRuleConditionType) *LazyCacheRuleConditionApplyConfiguration {
	b.Type = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *LazyCacheRuleConditionApplyConfiguration) WithStatus(value v1.ConditionStatus) *LazyCacheRuleConditionApplyConfiguration {
	b.Status = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *LazyCacheRuleConditionApplyConfiguration) WithMessage(value string) *LazyCacheRuleConditionApplyConfiguration {
	b.Message = &value
	return b
}
