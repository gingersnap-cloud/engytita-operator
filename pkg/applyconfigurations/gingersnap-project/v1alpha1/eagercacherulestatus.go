// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// EagerCacheRuleStatusApplyConfiguration represents an declarative configuration of the EagerCacheRuleStatus type for use
// with apply.
type EagerCacheRuleStatusApplyConfiguration struct {
	Conditions []EagerCacheRuleConditionApplyConfiguration `json:"conditions,omitempty"`
}

// EagerCacheRuleStatusApplyConfiguration constructs an declarative configuration of the EagerCacheRuleStatus type for use with
// apply.
func EagerCacheRuleStatus() *EagerCacheRuleStatusApplyConfiguration {
	return &EagerCacheRuleStatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *EagerCacheRuleStatusApplyConfiguration) WithConditions(values ...*EagerCacheRuleConditionApplyConfiguration) *EagerCacheRuleStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}
