// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gingersnap-project/operator/api/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EagerCacheRuleConditionApplyConfiguration represents an declarative configuration of the EagerCacheRuleCondition type for use
// with apply.
type EagerCacheRuleConditionApplyConfiguration struct {
	Type    *v1alpha1.EagerCacheRuleConditionType `json:"type,omitempty"`
	Status  *v1.ConditionStatus                   `json:"status,omitempty"`
	Message *string                               `json:"message,omitempty"`
}

// EagerCacheRuleConditionApplyConfiguration constructs an declarative configuration of the EagerCacheRuleCondition type for use with
// apply.
func EagerCacheRuleCondition() *EagerCacheRuleConditionApplyConfiguration {
	return &EagerCacheRuleConditionApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *EagerCacheRuleConditionApplyConfiguration) WithType(value v1alpha1.EagerCacheRuleConditionType) *EagerCacheRuleConditionApplyConfiguration {
	b.Type = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *EagerCacheRuleConditionApplyConfiguration) WithStatus(value v1.ConditionStatus) *EagerCacheRuleConditionApplyConfiguration {
	b.Status = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *EagerCacheRuleConditionApplyConfiguration) WithMessage(value string) *EagerCacheRuleConditionApplyConfiguration {
	b.Message = &value
	return b
}
