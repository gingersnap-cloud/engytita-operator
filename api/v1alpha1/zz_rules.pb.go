// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: config/cache/v1alpha1/rules.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:validation:Type=string
// Supported format for the key of the cache entry
type KeyFormat int32

const (
	KeyFormat_TEXT KeyFormat = 0
	KeyFormat_JSON KeyFormat = 1
)

// Enum value maps for KeyFormat.
var (
	KeyFormat_name = map[int32]string{
		0: "TEXT",
		1: "JSON",
	}
	KeyFormat_value = map[string]int32{
		"TEXT": 0,
		"JSON": 1,
	}
)

func (x KeyFormat) Enum() *KeyFormat {
	p := new(KeyFormat)
	*p = x
	return p
}

func (x KeyFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_config_cache_v1alpha1_rules_proto_enumTypes[0].Descriptor()
}

func (KeyFormat) Type() protoreflect.EnumType {
	return &file_config_cache_v1alpha1_rules_proto_enumTypes[0]
}

func (x KeyFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyFormat.Descriptor instead.
func (KeyFormat) EnumDescriptor() ([]byte, []int) {
	return file_config_cache_v1alpha1_rules_proto_rawDescGZIP(), []int{0}
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// Describes a caching rule behaviours
type EagerCacheRuleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reference to the related Cache CR
	CacheRef *NamespacedObjectReference `protobuf:"bytes,1,opt,name=cache_ref,json=cacheRef,proto3" json:"cache_ref,omitempty"`
	// Name of the table from where the data will be produced. Format could change depending
	// on the DB: table or schema.table must be at least supported
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Format of the key for the get(key) operation
	Key *EagerCacheKey `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Query columns used to build the entry value
	Value *Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EagerCacheRuleSpec) Reset() {
	*x = EagerCacheRuleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EagerCacheRuleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EagerCacheRuleSpec) ProtoMessage() {}

func (x *EagerCacheRuleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EagerCacheRuleSpec.ProtoReflect.Descriptor instead.
func (*EagerCacheRuleSpec) Descriptor() ([]byte, []int) {
	return file_config_cache_v1alpha1_rules_proto_rawDescGZIP(), []int{0}
}

func (x *EagerCacheRuleSpec) GetCacheRef() *NamespacedObjectReference {
	if x != nil {
		return x.CacheRef
	}
	return nil
}

func (x *EagerCacheRuleSpec) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *EagerCacheRuleSpec) GetKey() *EagerCacheKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EagerCacheRuleSpec) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// Describes a caching rule behaviours
type LazyCacheRuleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reference to the related Cache CR
	CacheRef *NamespacedObjectReference `protobuf:"bytes,1,opt,name=cache_ref,json=cacheRef,proto3" json:"cache_ref,omitempty"`
	// The select query needed to fetch values from the DB
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Format of the key for the get(key) operation
	Key *LazyCacheKey `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *LazyCacheRuleSpec) Reset() {
	*x = LazyCacheRuleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LazyCacheRuleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LazyCacheRuleSpec) ProtoMessage() {}

func (x *LazyCacheRuleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LazyCacheRuleSpec.ProtoReflect.Descriptor instead.
func (*LazyCacheRuleSpec) Descriptor() ([]byte, []int) {
	return file_config_cache_v1alpha1_rules_proto_rawDescGZIP(), []int{1}
}

func (x *LazyCacheRuleSpec) GetCacheRef() *NamespacedObjectReference {
	if x != nil {
		return x.CacheRef
	}
	return nil
}

func (x *LazyCacheRuleSpec) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *LazyCacheRuleSpec) GetKey() *LazyCacheKey {
	if x != nil {
		return x.Key
	}
	return nil
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// Describes how the key is build from the query result row
type LazyCacheKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +kubebuilder:validation:Enum=TEXT;JSON
	// Format of the key for the get(key) operation
	Format KeyFormat `protobuf:"varint,1,opt,name=format,proto3,enum=gingersnap.config.cache.v1alpha1.KeyFormat" json:"format,omitempty"`
	// Separator character in case of plain test key format
	KeySeparator string `protobuf:"bytes,2,opt,name=key_separator,json=keySeparator,proto3" json:"key_separator,omitempty"`
}

func (x *LazyCacheKey) Reset() {
	*x = LazyCacheKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LazyCacheKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LazyCacheKey) ProtoMessage() {}

func (x *LazyCacheKey) ProtoReflect() protoreflect.Message {
	mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LazyCacheKey.ProtoReflect.Descriptor instead.
func (*LazyCacheKey) Descriptor() ([]byte, []int) {
	return file_config_cache_v1alpha1_rules_proto_rawDescGZIP(), []int{2}
}

func (x *LazyCacheKey) GetFormat() KeyFormat {
	if x != nil {
		return x.Format
	}
	return KeyFormat_TEXT
}

func (x *LazyCacheKey) GetKeySeparator() string {
	if x != nil {
		return x.KeySeparator
	}
	return ""
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// Describes how the key is build from the query result row
type EagerCacheKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +kubebuilder:validation:Enum=TEXT;JSON
	// Format of the key for the get(key) operation
	Format KeyFormat `protobuf:"varint,1,opt,name=format,proto3,enum=gingersnap.config.cache.v1alpha1.KeyFormat" json:"format,omitempty"`
	// Separator character in case of plain test key format
	KeySeparator string `protobuf:"bytes,2,opt,name=key_separator,json=keySeparator,proto3" json:"key_separator,omitempty"`
	// Table columns composing the primary key
	KeyColumns []string `protobuf:"bytes,3,rep,name=key_columns,json=keyColumns,proto3" json:"key_columns,omitempty"`
}

func (x *EagerCacheKey) Reset() {
	*x = EagerCacheKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EagerCacheKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EagerCacheKey) ProtoMessage() {}

func (x *EagerCacheKey) ProtoReflect() protoreflect.Message {
	mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EagerCacheKey.ProtoReflect.Descriptor instead.
func (*EagerCacheKey) Descriptor() ([]byte, []int) {
	return file_config_cache_v1alpha1_rules_proto_rawDescGZIP(), []int{3}
}

func (x *EagerCacheKey) GetFormat() KeyFormat {
	if x != nil {
		return x.Format
	}
	return KeyFormat_TEXT
}

func (x *EagerCacheKey) GetKeySeparator() string {
	if x != nil {
		return x.KeySeparator
	}
	return ""
}

func (x *EagerCacheKey) GetKeyColumns() []string {
	if x != nil {
		return x.KeyColumns
	}
	return nil
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// Describes how the entry value is build from the query result row
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Table columns that will be fetched from the DB (select clause)
	ValueColumns []string `protobuf:"bytes,1,rep,name=value_columns,json=valueColumns,proto3" json:"value_columns,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_config_cache_v1alpha1_rules_proto_rawDescGZIP(), []int{4}
}

func (x *Value) GetValueColumns() []string {
	if x != nil {
		return x.ValueColumns
	}
	return nil
}

// A namespaced reference to a resource
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type NamespacedObjectReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Resource namespace
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *NamespacedObjectReference) Reset() {
	*x = NamespacedObjectReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespacedObjectReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacedObjectReference) ProtoMessage() {}

func (x *NamespacedObjectReference) ProtoReflect() protoreflect.Message {
	mi := &file_config_cache_v1alpha1_rules_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacedObjectReference.ProtoReflect.Descriptor instead.
func (*NamespacedObjectReference) Descriptor() ([]byte, []int) {
	return file_config_cache_v1alpha1_rules_proto_rawDescGZIP(), []int{5}
}

func (x *NamespacedObjectReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamespacedObjectReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

var File_config_cache_v1alpha1_rules_proto protoreflect.FileDescriptor

var file_config_cache_v1alpha1_rules_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x67, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x6e, 0x61, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x8f, 0x02, 0x0a, 0x12, 0x45, 0x61, 0x67, 0x65, 0x72, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x58, 0x0a, 0x09,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x67, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x6e, 0x61, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x6e, 0x61, 0x70, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x61, 0x67, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x73, 0x6e, 0x61, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x4c, 0x61, 0x7a, 0x79,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x58, 0x0a,
	0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x67, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x6e, 0x61, 0x70, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x40, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x73, 0x6e, 0x61, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x61,
	0x7a, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x78, 0x0a, 0x0c, 0x4c, 0x61, 0x7a, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x43, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x67, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x6e, 0x61, 0x70, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x65, 0x79,
	0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x45, 0x61,
	0x67, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x67, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x73, 0x6e, 0x61, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4b,
	0x65, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x53, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x2c, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2a, 0x1f, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53,
	0x4f, 0x4e, 0x10, 0x01, 0x42, 0x32, 0x0a, 0x2e, 0x69, 0x6f, 0x2e, 0x67, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_cache_v1alpha1_rules_proto_rawDescOnce sync.Once
	file_config_cache_v1alpha1_rules_proto_rawDescData = file_config_cache_v1alpha1_rules_proto_rawDesc
)

func file_config_cache_v1alpha1_rules_proto_rawDescGZIP() []byte {
	file_config_cache_v1alpha1_rules_proto_rawDescOnce.Do(func() {
		file_config_cache_v1alpha1_rules_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_cache_v1alpha1_rules_proto_rawDescData)
	})
	return file_config_cache_v1alpha1_rules_proto_rawDescData
}

var file_config_cache_v1alpha1_rules_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_cache_v1alpha1_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_config_cache_v1alpha1_rules_proto_goTypes = []interface{}{
	(KeyFormat)(0),                    // 0: gingersnap.config.cache.v1alpha1.KeyFormat
	(*EagerCacheRuleSpec)(nil),        // 1: gingersnap.config.cache.v1alpha1.EagerCacheRuleSpec
	(*LazyCacheRuleSpec)(nil),         // 2: gingersnap.config.cache.v1alpha1.LazyCacheRuleSpec
	(*LazyCacheKey)(nil),              // 3: gingersnap.config.cache.v1alpha1.LazyCacheKey
	(*EagerCacheKey)(nil),             // 4: gingersnap.config.cache.v1alpha1.EagerCacheKey
	(*Value)(nil),                     // 5: gingersnap.config.cache.v1alpha1.Value
	(*NamespacedObjectReference)(nil), // 6: gingersnap.config.cache.v1alpha1.NamespacedObjectReference
}
var file_config_cache_v1alpha1_rules_proto_depIdxs = []int32{
	6, // 0: gingersnap.config.cache.v1alpha1.EagerCacheRuleSpec.cache_ref:type_name -> gingersnap.config.cache.v1alpha1.NamespacedObjectReference
	4, // 1: gingersnap.config.cache.v1alpha1.EagerCacheRuleSpec.key:type_name -> gingersnap.config.cache.v1alpha1.EagerCacheKey
	5, // 2: gingersnap.config.cache.v1alpha1.EagerCacheRuleSpec.value:type_name -> gingersnap.config.cache.v1alpha1.Value
	6, // 3: gingersnap.config.cache.v1alpha1.LazyCacheRuleSpec.cache_ref:type_name -> gingersnap.config.cache.v1alpha1.NamespacedObjectReference
	3, // 4: gingersnap.config.cache.v1alpha1.LazyCacheRuleSpec.key:type_name -> gingersnap.config.cache.v1alpha1.LazyCacheKey
	0, // 5: gingersnap.config.cache.v1alpha1.LazyCacheKey.format:type_name -> gingersnap.config.cache.v1alpha1.KeyFormat
	0, // 6: gingersnap.config.cache.v1alpha1.EagerCacheKey.format:type_name -> gingersnap.config.cache.v1alpha1.KeyFormat
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_config_cache_v1alpha1_rules_proto_init() }
func file_config_cache_v1alpha1_rules_proto_init() {
	if File_config_cache_v1alpha1_rules_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_cache_v1alpha1_rules_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EagerCacheRuleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_cache_v1alpha1_rules_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LazyCacheRuleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_cache_v1alpha1_rules_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LazyCacheKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_cache_v1alpha1_rules_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EagerCacheKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_cache_v1alpha1_rules_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_cache_v1alpha1_rules_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespacedObjectReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_cache_v1alpha1_rules_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_cache_v1alpha1_rules_proto_goTypes,
		DependencyIndexes: file_config_cache_v1alpha1_rules_proto_depIdxs,
		EnumInfos:         file_config_cache_v1alpha1_rules_proto_enumTypes,
		MessageInfos:      file_config_cache_v1alpha1_rules_proto_msgTypes,
	}.Build()
	File_config_cache_v1alpha1_rules_proto = out.File
	file_config_cache_v1alpha1_rules_proto_rawDesc = nil
	file_config_cache_v1alpha1_rules_proto_goTypes = nil
	file_config_cache_v1alpha1_rules_proto_depIdxs = nil
}
