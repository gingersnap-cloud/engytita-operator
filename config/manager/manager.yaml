apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        image: operator:latest
        imagePullPolicy: Always
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        env:
          - name: RELATED_IMAGE_CACHE_MANAGER_MYSQL
            value: quay.io/gingersnap/cache-manager-mysql
          - name: RELATED_IMAGE_CACHE_MANAGER_MSSQL
            value: quay.io/gingersnap/cache-manager-mssql
          - name: RELATED_IMAGE_CACHE_MANAGER_POSTGRES
            value: quay.io/gingersnap/cache-manager-postgres
          - name: RELATED_IMAGE_DB_SYNCER
            value: quay.io/gingersnap/db-syncer
          - name: WATCH_NAMESPACE
#            valueFrom:
#              fieldRef:
#                fieldPath: metadata.namespace
            value: test
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
